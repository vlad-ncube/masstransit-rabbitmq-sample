@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <title>Index</title>
        <script src="~/Scripts/jquery-1.9.1.js" type="text/javascript"></script>
        <script src="~/Scripts/knockout-2.2.1.debug.js" type="text/javascript"></script>
        <script src="~/Scripts/jquery.history.js" type="text/javascript"></script>
    </head>
    <body>
        <div>
            Here are the steps:
            <div data-bind="template: { data: step, name: stepTemplate.bind($data) }"></div>
        </div>
    </body>
</html>

<script type="text/html" id="step-template1">
    <h3 id="stepHeader">This is step 1</h3>    
    <form>
        <div>
            <label for="input1">Input 1</label>
            <div>
                <input id="input1"/>
            </div>
        </div>
        <div>
            <button id = "sbmNext" data-bind="click: next">Next</button>
        </div>
    </form>
</script>

<script type="text/html" id="step-template2">
    <h3 id="stepHeader">This is step 2</h3>
    <form>
        <div>
            <label for="input2">Input 2</label>
            <div>
                <input id="input2"/>
            </div>
        </div>
        <div>
            <button id = "sbmNext" data-bind="click: next">Next</button>
        </div>
    </form>
</script>

<script type="text/html" id="step-template3">
    <h3 id="stepHeader">This is step 3</h3>
    <form>
        <div>
            <label for="input3">Input 3</label>
            <div>
                <input id="input3"/>
            </div>
        </div>
        <div>
            <button id = "sbmNext" data-bind="click: next">Next</button>
        </div>
    </form>
</script>

<script type="text/javascript">
    var history = window.History;
    history.init();
    this.stepId = 1;
    
    history.Adapter.bind(window, 'statechange', function () {
        var state = history.getState();
        var match = state.url.match(/step=(\d)/);
        if (match) {
            stepId = parseInt(match[1], 10);
        } else {
            stepId = 1;
        }
        
        ko.applyBindings(new MyViewModel());
    });
    
    function MyViewModel() {
        this.step = 'step-template'+stepId;
    }

    function next() {
        if (stepId == 3) return; // just a stub for tests
        stepId++;
        history.pushState(null, null, "?step=" + stepId);
    }

    function stepTemplate () {
        return this.step;
    }

    ko.applyBindings(new MyViewModel());
</script>